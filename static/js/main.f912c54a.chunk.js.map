{"version":3,"sources":["index.js","components/button.js","App.js"],"names":["rootElement","document","getElementById","createRoot","render","Buttons","props","className","this","col","extra","onClick","action","symbol","Component","App","reset","console","log","setState","current","previous","nextIsReset","addToCurrent","indexOf","state","push","calculate","length","eval","String","buttons","type","value","map","btn","i"],"mappings":"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","file":"static/js/main.f912c54a.chunk.js","sourcesContent":["import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n","import React, { Component } from \"react\";\r\n\r\nclass Buttons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={`column-${this.props.col}`}>\r\n        <button\r\n          className={`calc-button ${this.props.extra}`}\r\n          onClick={() => this.props.action(this.props.symbol)}\r\n        >\r\n          {this.props.symbol}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Buttons;\r\n","import React, { Component } from \"react\";\n\nimport Buttons from \"./components/button\";\nimport \"./styles.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: \"0\",\n      previous: [],\n      nextIsReset: false\n    };\n  }\n\n  //Write your generic functions after the constructor\n  reset = () => {\n    console.log(\"zero\");\n    this.setState({ current: \"0\", previous: [], nextIsReset: false });\n  };\n  addToCurrent = (symbol) => {\n    if ([\"*\", \"-\", \"+\", \"/\"].indexOf(symbol) > -1) {\n      let { previous } = this.state;\n      previous.push(this.state.current + symbol);\n      this.setState({ previous, nextIsReset: true });\n    } else {\n      if (\n        (this.state.current === \"0\" && symbol !== \".\") ||\n        this.state.nextIsReset\n      ) {\n        this.setState({ current: symbol, nextIsReset: false });\n      } else {\n        this.setState({ current: this.state.current + symbol });\n      }\n      //console.log(\"symbol\")\n    }\n  };\n\n  calculate = (symbol) => {\n    let { current, previous, nextIsReset } = this.state;\n    if (previous.length > 0) {\n      current = eval(String(previous[previous.length - 1] + current));\n      this.setState({ current, previous: [], nextIsReset: true });\n    }\n\n    console.log(\"summed\");\n  };\n\n  render() {\n    const buttons = [\n      { symbol: \"C\", col: 3, extra: \"light\", action: this.reset },\n      { symbol: \"/\", col: 1, extra: \"light\", action: this.addToCurrent },\n      { symbol: \"7\", col: 1, action: this.addToCurrent },\n      { symbol: \"8\", col: 1, action: this.addToCurrent },\n      { symbol: \"9\", col: 1, action: this.addToCurrent },\n      { symbol: \"*\", col: 1, extra: \"light\", action: this.addToCurrent },\n      { symbol: \"4\", col: 1, action: this.addToCurrent },\n      { symbol: \"5\", col: 1, action: this.addToCurrent },\n      { symbol: \"6\", col: 1, action: this.addToCurrent },\n      { symbol: \"-\", col: 1, extra: \"light\", action: this.addToCurrent },\n      { symbol: \"1\", col: 1, action: this.addToCurrent },\n      { symbol: \"2\", col: 1, action: this.addToCurrent },\n      { symbol: \"3\", col: 1, action: this.addToCurrent },\n      { symbol: \"+\", col: 1, extra: \"light\", action: this.addToCurrent },\n      { symbol: \".\", col: 1, action: this.addToCurrent },\n      { symbol: \"0\", col: 2, action: this.addToCurrent },\n      { symbol: \"=\", col: 1, extra: \"light\", action: this.calculate }\n    ];\n\n    return (\n      <div className=\"App\">\n        <h2> Calculator App </h2>\n\n        <div className=\"button-container\">\n          {this.state.previous.length > 0 ? (\n            <div className=\"floaty\">\n              {this.state.previous[this.state.previous.length - 1]}\n            </div>\n          ) : null}\n          <input className=\"result\" type=\"text\" value={this.state.current} />\n\n          {buttons.map((btn, i) => {\n            return (\n              <Buttons\n                key={i}\n                symbol={btn.symbol}\n                col={btn.col}\n                extra={btn.extra}\n                action={(symbol) => btn.action(symbol)}\n              />\n            );\n          })}\n          <Buttons />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"],"sourceRoot":""}